{"ast":null,"code":"import { all, takeLatest, call } from 'redux-saga/effects';\nimport JacketActionTypes from '../jackets/jackets-types';\nexport function* fetchAllJacketsAsync() {\n  const allJackets = yield call(fetchAllJackets);\n}\nexport function* fetchAllJacketsSaga() {\n  yield takeLatest(JacketActionTypes.FETCH_ALL_JACKETS, fetchAllJacketsAsync);\n}\nexport function* jacketsSaga() {\n  yield all([fetchAllJacketsSaga()]);\n}\n\nasync function fetchAllJackets() {\n  const response = await fetch('http://my-json-server.typicode.com/Bakra/react-app/items').then(res => res.json()).catch(error => {\n    return null;\n  });\n  return response;\n}","map":{"version":3,"sources":["/home/aleksandar/work/react_first_app/test/react-app/src/redux/sagas/jackets.sagas.js"],"names":["all","takeLatest","call","JacketActionTypes","fetchAllJacketsAsync","allJackets","fetchAllJackets","fetchAllJacketsSaga","FETCH_ALL_JACKETS","jacketsSaga","response","fetch","then","res","json","catch","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AAIA,OAAO,UAAUC,oBAAV,GAAkC;AACrC,QAAMC,UAAU,GAAG,MAAMH,IAAI,CAACI,eAAD,CAA7B;AACH;AAED,OAAO,UAAUC,mBAAV,GAAiC;AACpC,QAAMN,UAAU,CAACE,iBAAiB,CAACK,iBAAnB,EAAsCJ,oBAAtC,CAAhB;AACH;AAED,OAAO,UAAUK,WAAV,GAAyB;AAC5B,QAAMT,GAAG,CAAC,CACNO,mBAAmB,EADb,CAAD,CAAT;AAGH;;AAED,eAAeD,eAAf,GAAiC;AAC7B,QAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAAD,CAAL,CAAkEC,IAAlE,CAAuEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA9E,EAA0FC,KAA1F,CAAgGC,KAAK,IAAI;AAC5H,WAAO,IAAP;AACH,GAFsB,CAAvB;AAGA,SAAON,QAAP;AACH","sourcesContent":["import { all, takeLatest, call } from 'redux-saga/effects'\nimport JacketActionTypes from '../jackets/jackets-types'\n\n\n\nexport function* fetchAllJacketsAsync () {\n    const allJackets = yield call(fetchAllJackets)\n}\n\nexport function* fetchAllJacketsSaga () {\n    yield takeLatest(JacketActionTypes.FETCH_ALL_JACKETS, fetchAllJacketsAsync)\n}\n\nexport function* jacketsSaga () {\n    yield all([\n        fetchAllJacketsSaga()\n    ])\n}\n\nasync function fetchAllJackets() {\n    const response = await fetch('http://my-json-server.typicode.com/Bakra/react-app/items').then(res => res.json()).catch(error => {\n        return null;\n    });\n    return response;\n}"]},"metadata":{},"sourceType":"module"}