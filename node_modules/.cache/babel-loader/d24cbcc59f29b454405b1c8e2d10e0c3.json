{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport PostsActionTypes from '../posts/post-types';\nimport { fetchAllPostsSuccess, fetchAllPostsFailure } from '../posts/posts.actions';\nexport function* fetchAllPostsAsync() {\n  const allPosts = yield call(fetchAllPosts);\n\n  if (allPosts) {\n    yield put(fetchAllPostsSuccess(allPosts));\n  } else {\n    yield put(fetchAllPostsFailure());\n  }\n}\nexport function* fetchAllPostsSaga() {\n  yield takeLatest(PostsActionTypes.FETCH_ALL_POSTS, fetchAllPostsAsync);\n}\nexport function* postsSaga() {\n  yield all([fetchAllPostsSaga()]);\n}\n\nasync function fetchAllPosts() {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).catch(error => {\n    return null;\n  });\n  return response;\n}","map":{"version":3,"sources":["/home/aleksandar/work/react_first_app/test/react-app/src/redux/sagas/posts.sagas.js"],"names":["all","takeLatest","call","put","PostsActionTypes","fetchAllPostsSuccess","fetchAllPostsFailure","fetchAllPostsAsync","allPosts","fetchAllPosts","fetchAllPostsSaga","FETCH_ALL_POSTS","postsSaga","response","fetch","then","res","json","catch","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,wBAA3D;AAEA,OAAO,UAAUC,kBAAV,GAA+B;AAClC,QAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,aAAD,CAA3B;;AACA,MAAID,QAAJ,EAAc;AACV,UAAML,GAAG,CAACE,oBAAoB,CAACG,QAAD,CAArB,CAAT;AACH,GAFD,MAEO;AACH,UAAML,GAAG,CAACG,oBAAoB,EAArB,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,iBAAV,GAA8B;AACjC,QAAMT,UAAU,CAACG,gBAAgB,CAACO,eAAlB,EAAmCJ,kBAAnC,CAAhB;AACH;AAED,OAAO,UAAUK,SAAV,GAAsB;AACzB,QAAMZ,GAAG,CAAC,CACNU,iBAAiB,EADX,CAAD,CAAT;AAGH;;AAED,eAAeD,aAAf,GAA+B;AAC3B,QAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CAAyDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAhE,EAA4EC,KAA5E,CAAkFC,KAAK,IAAI;AAC9G,WAAO,IAAP;AACH,GAFsB,CAAvB;AAGA,SAAON,QAAP;AACH","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects'\nimport PostsActionTypes from '../posts/post-types';\nimport { fetchAllPostsSuccess, fetchAllPostsFailure } from '../posts/posts.actions';\n\nexport function* fetchAllPostsAsync() {\n    const allPosts = yield call(fetchAllPosts);\n    if (allPosts) {\n        yield put(fetchAllPostsSuccess(allPosts));\n    } else {\n        yield put(fetchAllPostsFailure());\n    }\n}\n\nexport function* fetchAllPostsSaga() {\n    yield takeLatest(PostsActionTypes.FETCH_ALL_POSTS, fetchAllPostsAsync);\n}\n\nexport function* postsSaga() {\n    yield all([\n        fetchAllPostsSaga()\n    ]);\n}\n\nasync function fetchAllPosts() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).catch(error => {\n        return null;\n    });\n    return response;\n}"]},"metadata":{},"sourceType":"module"}