{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport JacketActionTypes from '../jackets/jackets-types';\nimport { fetchAllJacketsSuccess, fetchAllJacketsFailure } from '../jackets/jackets.actions';\nexport function* fetchAllJacketsAsync() {\n  const allJackets = yield call(fetchAllJackets);\n\n  if (allJackets) {\n    yield put(fetchAllJacketsSuccess(allJackets));\n  } else {\n    yield put(fetchAllJacketsFailure());\n  }\n}\nexport function* fetchAllJacketsSaga() {\n  yield takeLatest(JacketActionTypes.FETCH_ALL_JACKETS, fetchAllJacketsAsync);\n}\nexport function* jacketsSaga() {\n  yield all([fetchAllJacketsSaga()]);\n}\n\nasync function fetchAllJackets() {\n  const response = await fetch('http://my-json-server.typicode.com/Bakra/react-app/jackets').then(res => res.json()).catch(error => {\n    return null;\n  });\n  return response;\n}","map":{"version":3,"sources":["/home/aleksandar/work/react_first_app/test/react-app/src/redux/sagas/jackets.sagas.js"],"names":["all","takeLatest","call","put","JacketActionTypes","fetchAllJacketsSuccess","fetchAllJacketsFailure","fetchAllJacketsAsync","allJackets","fetchAllJackets","fetchAllJacketsSaga","FETCH_ALL_JACKETS","jacketsSaga","response","fetch","then","res","json","catch","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,4BAA/D;AAGA,OAAO,UAAUC,oBAAV,GAAkC;AACrC,QAAMC,UAAU,GAAG,MAAMN,IAAI,CAACO,eAAD,CAA7B;;AACA,MAAID,UAAJ,EAAgB;AACZ,UAAML,GAAG,CAACE,sBAAsB,CAACG,UAAD,CAAvB,CAAT;AACH,GAFD,MAEO;AACH,UAAML,GAAG,CAACG,sBAAsB,EAAvB,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,mBAAV,GAAiC;AACpC,QAAMT,UAAU,CAACG,iBAAiB,CAACO,iBAAnB,EAAsCJ,oBAAtC,CAAhB;AACH;AAED,OAAO,UAAUK,WAAV,GAAyB;AAC5B,QAAMZ,GAAG,CAAC,CACNU,mBAAmB,EADb,CAAD,CAAT;AAGH;;AAED,eAAeD,eAAf,GAAiC;AAC7B,QAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAAD,CAAL,CAAoEC,IAApE,CAAyEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAhF,EAA4FC,KAA5F,CAAkGC,KAAK,IAAI;AAC9H,WAAO,IAAP;AACH,GAFsB,CAAvB;AAGA,SAAON,QAAP;AACH","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects'\nimport JacketActionTypes from '../jackets/jackets-types'\nimport { fetchAllJacketsSuccess, fetchAllJacketsFailure } from '../jackets/jackets.actions';\n\n\nexport function* fetchAllJacketsAsync () {\n    const allJackets = yield call(fetchAllJackets)\n    if (allJackets) {\n        yield put(fetchAllJacketsSuccess(allJackets));\n    } else {\n        yield put(fetchAllJacketsFailure());\n    }\n}\n\nexport function* fetchAllJacketsSaga () {\n    yield takeLatest(JacketActionTypes.FETCH_ALL_JACKETS, fetchAllJacketsAsync)\n}\n\nexport function* jacketsSaga () {\n    yield all([\n        fetchAllJacketsSaga()\n    ])\n}\n\nasync function fetchAllJackets() {\n    const response = await fetch('http://my-json-server.typicode.com/Bakra/react-app/jackets').then(res => res.json()).catch(error => {\n        return null;\n    });\n    return response;\n}"]},"metadata":{},"sourceType":"module"}