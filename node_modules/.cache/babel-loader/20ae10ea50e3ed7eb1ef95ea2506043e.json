{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport HatsActionTypes from '../hats/hats-types';\nimport { fetchAllHatsSuccess, fetchAllHatsFailure } from '../hats/hats.actions';\nexport function* fetchAllPostsAsync() {\n  const allPosts = yield call(fetchAllPosts);\n\n  if (allPosts) {\n    yield put(fetchAllPostsSuccess(allPosts));\n  } else {\n    yield put(fetchAllPostsFailure());\n  }\n}\nexport function* fetchAllPostsSaga() {\n  yield takeLatest(HatsActionTypes.FETCH_ALL_HATS, fetchAllPostsAsync);\n}\nexport function* postsSaga() {\n  yield all([fetchAllPostsSaga()]);\n}\n\nasync function fetchAllPosts() {\n  const response = await fetch('http://my-json-server.typicode.com/Bakra/react-app/items').then(res => res.json()).catch(error => {\n    return null;\n  });\n  return response;\n}","map":{"version":3,"sources":["/home/aleksandar/work/react_first_app/test/react-app/src/redux/sagas/posts.sagas.js"],"names":["all","takeLatest","call","put","HatsActionTypes","fetchAllHatsSuccess","fetchAllHatsFailure","fetchAllPostsAsync","allPosts","fetchAllPosts","fetchAllPostsSuccess","fetchAllPostsFailure","fetchAllPostsSaga","FETCH_ALL_HATS","postsSaga","response","fetch","then","res","json","catch","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,sBAAzD;AAEA,OAAO,UAAUC,kBAAV,GAA+B;AAClC,QAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,aAAD,CAA3B;;AACA,MAAID,QAAJ,EAAc;AACV,UAAML,GAAG,CAACO,oBAAoB,CAACF,QAAD,CAArB,CAAT;AACH,GAFD,MAEO;AACH,UAAML,GAAG,CAACQ,oBAAoB,EAArB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACjC,QAAMX,UAAU,CAACG,eAAe,CAACS,cAAjB,EAAiCN,kBAAjC,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GAAsB;AACzB,QAAMd,GAAG,CAAC,CACNY,iBAAiB,EADX,CAAD,CAAT;AAGH;;AAED,eAAeH,aAAf,GAA+B;AAC3B,QAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAAD,CAAL,CAAkEC,IAAlE,CAAuEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA9E,EAA0FC,KAA1F,CAAgGC,KAAK,IAAI;AAC5H,WAAO,IAAP;AACH,GAFsB,CAAvB;AAGA,SAAON,QAAP;AACH","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects'\nimport HatsActionTypes from '../hats/hats-types';\nimport { fetchAllHatsSuccess, fetchAllHatsFailure } from '../hats/hats.actions';\n\nexport function* fetchAllPostsAsync() {\n    const allPosts = yield call(fetchAllPosts);\n    if (allPosts) {\n        yield put(fetchAllPostsSuccess(allPosts));\n    } else {\n        yield put(fetchAllPostsFailure());\n    }\n}\n\nexport function* fetchAllPostsSaga() {\n    yield takeLatest(HatsActionTypes.FETCH_ALL_HATS, fetchAllPostsAsync);\n}\n\nexport function* postsSaga() {\n    yield all([\n        fetchAllPostsSaga()\n    ]);\n}\n\nasync function fetchAllPosts() {\n    const response = await fetch('http://my-json-server.typicode.com/Bakra/react-app/items').then(res => res.json()).catch(error => {\n        return null;\n    });\n    return response;\n}"]},"metadata":{},"sourceType":"module"}