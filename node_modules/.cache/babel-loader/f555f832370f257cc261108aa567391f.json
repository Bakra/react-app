{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport PostsActionTypes from '../posts/post-types';\nimport { fetchAllPostsSuccess, fetchAllPostsFailure } from '../posts/posts.actions';\nexport function* fetchAllPostsAsync() {\n  const allPosts = yield call(fetchAllPosts);\n  console.log(\"ALL POSTS\");\n  console.log(allPosts);\n\n  if (allPosts) {\n    console.log(\"SUCCESS\");\n    yield put(fetchAllPostsSuccess(allPosts));\n  } else {\n    yield put(fetchAllPostsFailure);\n  }\n}\nexport function* updatePostAsync() {}\nexport function* updatePostSaga() {}\nexport function* fetchAllPostsSaga() {\n  yield takeLatest(PostsActionTypes.FETCH_ALL_POSTS, fetchAllPostsAsync);\n}\nexport function* postsSaga() {\n  yield all([fetchAllPostsSaga()]);\n}\n\nasync function fetchAllPosts() {\n  const response = await fetch('https://jsonplaceasdasdasholder.typicode.com/postsasdasdasd').then(res => res.json()).catch(error => {\n    return null;\n  });\n  return response;\n}","map":{"version":3,"sources":["/home/aleksandar/work/react_first_app/crwn-clothing/src/redux/sagas/posts.sagas.js"],"names":["all","takeLatest","call","put","PostsActionTypes","fetchAllPostsSuccess","fetchAllPostsFailure","fetchAllPostsAsync","allPosts","fetchAllPosts","console","log","updatePostAsync","updatePostSaga","fetchAllPostsSaga","FETCH_ALL_POSTS","postsSaga","response","fetch","then","res","json","catch","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,wBAA3D;AAEA,OAAO,UAAUC,kBAAV,GAA+B;AAClC,QAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,aAAD,CAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAIA,QAAJ,EAAc;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMR,GAAG,CAACE,oBAAoB,CAACG,QAAD,CAArB,CAAT;AACH,GAHD,MAGO;AACH,UAAML,GAAG,CAACG,oBAAD,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,eAAV,GAA4B,CAElC;AAED,OAAO,UAAUC,cAAV,GAA2B,CAEjC;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACjC,QAAMb,UAAU,CAACG,gBAAgB,CAACW,eAAlB,EAAmCR,kBAAnC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAMhB,GAAG,CAAC,CACNc,iBAAiB,EADX,CAAD,CAAT;AAGH;;AAED,eAAeL,aAAf,GAA+B;AAC3B,QAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,6DAAD,CAAL,CAAqEC,IAArE,CAA0EC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAjF,EAA6FC,KAA7F,CAAmGC,KAAK,IAAI;AAC/H,WAAO,IAAP;AACH,GAFsB,CAAvB;AAGA,SAAON,QAAP;AACH","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects'\nimport PostsActionTypes from '../posts/post-types';\nimport { fetchAllPostsSuccess, fetchAllPostsFailure } from '../posts/posts.actions';\n\nexport function* fetchAllPostsAsync() {\n    const allPosts = yield call(fetchAllPosts);\n    console.log(\"ALL POSTS\");\n    console.log(allPosts);\n    if (allPosts) {\n        console.log(\"SUCCESS\");\n        yield put(fetchAllPostsSuccess(allPosts));\n    } else {\n        yield put(fetchAllPostsFailure);\n    }\n}\n\nexport function* updatePostAsync() {\n\n}\n\nexport function* updatePostSaga() {\n\n}\n\nexport function* fetchAllPostsSaga() {\n    yield takeLatest(PostsActionTypes.FETCH_ALL_POSTS, fetchAllPostsAsync);\n}\n\nexport function* postsSaga() {\n    yield all([\n        fetchAllPostsSaga()\n    ]);\n}\n\nasync function fetchAllPosts() {\n    const response = await fetch('https://jsonplaceasdasdasholder.typicode.com/postsasdasdasd').then(res => res.json()).catch(error => {\n        return null;\n    });\n    return response;\n}"]},"metadata":{},"sourceType":"module"}