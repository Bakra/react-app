{"ast":null,"code":"import { all, takeLatest } from 'redux-saga/effects';\nimport CartActionTypes from '../cart/cart.types';\nexport function* fetchAllShopsAsync() {\n  try {\n    const allShops = yield call(fetchAllShops);\n    yield call(fetchAllShopsSuccess, allShops);\n  } catch (error) {\n    yield call(fetchAllShopAsyncFailure);\n  }\n}\nexport function* fetchAllShopsSaga() {\n  yield takeLatest(CartActionTypes.ADD_ITEM, fetchAllShopsAsync);\n}\nexport function* shopSaga() {\n  yield all([fetchAllShopsSaga()]);\n}\n\nasync function fetchAllShops() {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts/1').then(res => res.json());\n  return response;\n}","map":{"version":3,"sources":["/home/aleksandar/work/react_first_app/crwn-clothing/src/redux/sagas/shop.sagas.js"],"names":["all","takeLatest","CartActionTypes","fetchAllShopsAsync","allShops","call","fetchAllShops","fetchAllShopsSuccess","error","fetchAllShopAsyncFailure","fetchAllShopsSaga","ADD_ITEM","shopSaga","response","fetch","then","res","json"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,OAAO,UAAUC,kBAAV,GAA+B;AAClC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,IAAI,CAACC,aAAD,CAA3B;AACA,UAAMD,IAAI,CAACE,oBAAD,EAAuBH,QAAvB,CAAV;AACH,GAHD,CAGE,OAAMI,KAAN,EAAa;AACX,UAAMH,IAAI,CAACI,wBAAD,CAAV;AACH;AACJ;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACjC,QAAMT,UAAU,CAACC,eAAe,CAACS,QAAjB,EAA2BR,kBAA3B,CAAhB;AACH;AAED,OAAO,UAAUS,QAAV,GAAqB;AACxB,QAAMZ,GAAG,CAAC,CACNU,iBAAiB,EADX,CAAD,CAAT;AAGH;;AAED,eAAeJ,aAAf,GAA+B;AAC3B,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAAL,CAAsDC,IAAtD,CAA2DC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAlE,CAAvB;AACA,SAAOJ,QAAP;AACH","sourcesContent":["import { all, takeLatest } from 'redux-saga/effects'\nimport CartActionTypes from '../cart/cart.types'\n\nexport function* fetchAllShopsAsync() {\n    try {\n        const allShops = yield call(fetchAllShops);\n        yield call(fetchAllShopsSuccess, allShops);\n    } catch(error) {\n        yield call(fetchAllShopAsyncFailure);\n    }\n}\n\nexport function* fetchAllShopsSaga() {\n    yield takeLatest(CartActionTypes.ADD_ITEM, fetchAllShopsAsync);\n}\n\nexport function* shopSaga() {\n    yield all([\n        fetchAllShopsSaga()\n    ]);\n}\n\nasync function fetchAllShops() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts/1').then(res => res.json());\n    return response;\n}"]},"metadata":{},"sourceType":"module"}