{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport HatsActionTypes from '../hats/hats-types';\nimport { fetchAllHatsSuccess, fetchAllHatsFailure } from '../hats/hats.actions';\nexport function* fetchAllHatsAsync() {\n  const allHats = yield call(fetchAllHats);\n\n  if (allHats) {\n    yield put(fetchAllHatsSuccess(allHats));\n  } else {\n    yield put(fetchAllHatsFailure());\n  }\n}\nexport function* fetchAllHatsSaga() {\n  yield takeLatest(HatsActionTypes.FETCH_ALL_HATS, fetchAllHatsAsync);\n}\nexport function* hatsSaga() {\n  yield all([fetchAllHatsSaga()]);\n}\n\nasync function fetchAllHats() {\n  const response = await fetch('http://my-json-server.typicode.com/Bakra/react-app/items').then(res => res.json()).catch(error => {\n    return null;\n  });\n  return response;\n}","map":{"version":3,"sources":["/home/aleksandar/work/react_first_app/test/react-app/src/redux/sagas/hats.sagas.js"],"names":["all","takeLatest","call","put","HatsActionTypes","fetchAllHatsSuccess","fetchAllHatsFailure","fetchAllHatsAsync","allHats","fetchAllHats","fetchAllHatsSaga","FETCH_ALL_HATS","hatsSaga","response","fetch","then","res","json","catch","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,sBAAzD;AAEA,OAAO,UAAUC,iBAAV,GAA8B;AACjC,QAAMC,OAAO,GAAG,MAAMN,IAAI,CAACO,YAAD,CAA1B;;AACA,MAAID,OAAJ,EAAa;AACT,UAAML,GAAG,CAACE,mBAAmB,CAACG,OAAD,CAApB,CAAT;AACH,GAFD,MAEO;AACH,UAAML,GAAG,CAACG,mBAAmB,EAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,gBAAV,GAA6B;AAChC,QAAMT,UAAU,CAACG,eAAe,CAACO,cAAjB,EAAiCJ,iBAAjC,CAAhB;AACH;AAED,OAAO,UAAUK,QAAV,GAAqB;AACxB,QAAMZ,GAAG,CAAC,CACNU,gBAAgB,EADV,CAAD,CAAT;AAGH;;AAED,eAAeD,YAAf,GAA8B;AAC1B,QAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAAD,CAAL,CAAkEC,IAAlE,CAAuEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA9E,EAA0FC,KAA1F,CAAgGC,KAAK,IAAI;AAC5H,WAAO,IAAP;AACH,GAFsB,CAAvB;AAGA,SAAON,QAAP;AACH","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects'\nimport HatsActionTypes from '../hats/hats-types';\nimport { fetchAllHatsSuccess, fetchAllHatsFailure } from '../hats/hats.actions';\n\nexport function* fetchAllHatsAsync() {\n    const allHats = yield call(fetchAllHats);\n    if (allHats) {\n        yield put(fetchAllHatsSuccess(allHats));\n    } else {\n        yield put(fetchAllHatsFailure());\n    }\n}\n\nexport function* fetchAllHatsSaga() {\n    yield takeLatest(HatsActionTypes.FETCH_ALL_HATS, fetchAllHatsAsync);\n}\n\nexport function* hatsSaga() {\n    yield all([\n        fetchAllHatsSaga()\n    ]);\n}\n\nasync function fetchAllHats() {\n    const response = await fetch('http://my-json-server.typicode.com/Bakra/react-app/items').then(res => res.json()).catch(error => {\n        return null;\n    });\n    return response;\n}"]},"metadata":{},"sourceType":"module"}